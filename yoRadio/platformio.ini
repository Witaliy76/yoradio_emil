[platformio]
data_dir  = ./data
default_envs = esp32
extra_configs =
  user_*.ini
;  ci_envs.ini
; подключаем дополнительные конфиги platformio в виде user_*.ini файлов
; если вам нужен свой env для сборки, оформляйте его в виде дополнительных user_*.ini файлов,
; они не будут обновляться при синхронизации репозитория
; подробнее
; https://docs.platformio.org/en/latest/projectconf/section_platformio.html#extra-configs


; build flags for esp32
[flags]
build_src_flags =
build_unflags =
build_flags =

; https://docs.platformio.org/en/latest/core/userguide/lib/cmd_install.html#description
; https://docs.platformio.org/en/stable/core/userguide/pkg/cmd_install.html
[libs]
common =
    adafruit / Adafruit GFX Library
    adafruit / Adafruit ILI9341
    adafruit / Adafruit ST7735 and ST7789 Library
    esp32async/ESPAsyncWebServer
    marvinroger/AsyncMqttClient
    bblanchon / ArduinoJson@^7.2,<7.4

vortigont =


[env]
framework = arduino
; Arduino 3.2.0 IDF 5.4.1
platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip

;platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip

board_build.filesystem = littlefs
custom_component_remove = espressif/esp_hosted
                          espressif/esp_wifi_remote
                          espressif/esp-dsp
                          espressif/esp32-camera
                          espressif/libsodium
                          espressif/esp-modbus
                          espressif/qrcode
                          espressif/esp_insights
                          espressif/esp_diag_data_store
                          espressif/esp_diagnostics
                          espressif/esp_rainmaker
                          espressif/rmaker_common

[esp32_base]
lib_ignore =
lib_deps =
    ${libs.common}
;    ${libs.vortigont}
build_src_flags =
    ${flags.build_src_flags}
build_unflags =
    ${flags.build_unflags}
build_flags =
    ${flags.build_flags}
;    -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
;extra_scripts =
;    pre:extra/pre_embedres.py

; ESP32 generic
[env:esp32]
extends = esp32_base
board = esp32dev        ; https://docs.platformio.org/en/latest/boards/espressif32/esp32dev.html
board_build.partitions = part_4M.csv

; ESP32 with debug
[env:esp32debug]
extends = env:esp32
build_flags =
    ${flags.build_flags}
    ; Arduino Core Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    -DCORE_DEBUG_LEVEL=2
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1
build_src_flags =
    ${flags.build_src_flags}


